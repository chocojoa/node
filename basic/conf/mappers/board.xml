<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

    <!-- 게시판 전체 개수 조회 -->
    <select id="selectBoardTotalCount">
        SELECT COUNT(B.ID) AS totalCount
          FROM board B
         WHERE B.TYPE = #{type}
    </select>
    
    <!-- 게시판 목록 조회 -->
    <select id="selectBoardList">
        SELECT ROW_NUMBER() OVER(PARTITION BY B.TYPE ORDER BY B.ID) AS no
             , B.ID                     AS boardId
             , B.USER_ID                AS userId
             , U.USER_NAME              AS userName
             , U.EMAIL                  AS email
             , B.TITLE                  AS title
             , B.VIEWS                  AS views
             , DATE_FORMAT(B.CREATED_DATE, '%Y-%m-%d') AS createDate
             , IFNULL(R.REPLY_CNT, 0)   AS replyCnt
          FROM board B
         INNER JOIN users U ON B.USER_ID = U.USER_ID
          LEFT JOIN (
                     SELECT BOARD_ID
                          , COUNT(ID) AS REPLY_CNT
                       FROM board_reply 
                      GROUP BY BOARD_ID
                    ) R ON B.ID = R.BOARD_ID
         WHERE B.TYPE = #{type}
        <if test="sortColumn != null and sortColumn !=''">
         ORDER BY ${sortColumn} ${sortDir}
        </if>
        <if test="pageSize != null and pageSize !=''">
         LIMIT ${pageNum}, ${pageSize}
        </if>
    </select>

    <!-- 게시판 상세 정보 조회 -->
    <select id="selectBoardDetail">
        SELECT B.ID         AS boardId
             , B.USER_ID    AS userId
             , U.USER_NAME  AS userName
             , U.EMAIL      AS email
             , B.TITLE      AS title
             , B.CONTENT    AS content
             , B.VIEWS      AS views
             , DATE_FORMAT(B.CREATED_DATE, '%Y-%m-%d') AS createdDate
          FROM board B
         INNER JOIN users U ON B.USER_ID = U.USER_ID
         WHERE B.TYPE = #{type}
           AND B.ID = #{boardId}
    </select>

    <!-- 게시판 조회 수 수정 -->
    <update id="updateBoardViews">
        UPDATE board
           SET VIEWS = VIEWS + 1
         WHERE TYPE = #{type}
           AND ID = #{id}
    </update>

    <!-- 게시판 등록 -->
    <insert id="insertBoardInformation">
        INSERT INTO board(
                 USER_ID
                ,TYPE
                ,TITLE
                ,CONTENT
                ,VIEWS
                ,CREATED_DATE
                ,CREATED_BY
            )VALUES(
                 #{userId}
                ,#{type}
                ,#{title}
                ,#{content}
                ,0
                ,NOW()
                ,#{userId}
            )
    </insert>

    <!-- 게시판 수정 -->
    <update id="updateBoardInformation">
        UPDATE board
           SET TITLE = #{title}
             , CONTENT = #{content}
             , UPDATED_DATE = NOW()
             , UPDATED_BY = #{userId}
         WHERE TYPE = #{type}
           AND ID = #{boardId}
    </update>

    <!-- 게시판 삭제 -->
    <delete id="deleteBoardInformation">
        DELETE FROM board
         WHERE TYPE = #{type}
           AND ID = #{boardId}
    </delete>

    <!-- 댓글 목록 조회 -->
    <select id="selectReplyList">
        SELECT B.USER_ID    AS userId
             , U.USER_NAME  AS userName
             , U.EMAIL      AS email
             , B.CONTENT    AS content
             , DATE_FORMAT(B.CREATED_DATE, '%Y-%m-%d') AS createdDate
          FROM board_reply B
         INNER JOIN users U ON B.USER_ID = U.USER_ID
         WHERE B.BOARD_ID = #{boardId}
         ORDER BY B.ID ASC
    </select>

    <!-- 댓글 정보 저장 -->
    <insert id="insertReplyInformation">
        INSERT INTO board_reply (
                 BOARD_ID
                ,USER_ID
                ,CONTENT
                ,CREATED_DATE
                ,CREATED_BY
            )VALUES(
                 #{boardId}
                ,#{userId}
                ,#{replyContent}
                ,NOW()
                ,#{userId}
            )
    </insert>

</mapper>